import os
import sys

from h5py.h5o import exists_by_name

"""
파일 시스템 (File System) 이란?
- 파일을 관리하고 제어 할 수 있는 기능을 의미한다. (+ 즉, 파일 시스템을 활용하면 반영구적으로 데이터를
저장하는 것이 가능하다.)

프로그램은 주 기억 장치 (+ Ex. 메모리) 상에 위치하기 때문에 프로그램이 종료되고 나면 프로그램이 사용하고 있던
데이터도 모두 사라지는 단점이 존재한다. (+ 즉, 변수는 주 기억 장치 상에 선언 된다는 것을 알 수 있다.)

따라서 프로그램이 사용하고 있던 데이터를 반영구적으로 저장하기 위해서는 주 기억 장치가 아닌
다른 기억 장치 (+ Ex. 보조 기억 장치) 에 저장 할 필요가 있으며 이때 파일을 활용하는 것이 가능하다. (+ 즉, 파일은
보조 기억 장치 상에 생성 된다는 것을 알 수 있다.)

프로그램은 사용하고 있던 데이터를 파일에 저장하고 읽어들임으로서 데이터를 반영구적으로 유지하는 것이 가능하다.
(+ 즉, 프로그램이 실행 될 때 파일에 존재하는 데이터를 읽어들임으로서 이전에 실행 되었을 때 사용한 데이터를 계속
유지한다는 것을 의미한다.)

Python 파일 제어 방법
- Python 으로 제작한 프로그램에서 파일에 데이터를 저장하거나 읽어들이기 위해서는 먼저 스트림 (Stream) 을
생성 할 필요가 있다.

스트림 (Stream) 이란?
- 데이터를 이동 시킬 수 있는 통로를 의미하며 프로그램과 파일은 스트림을 통해 데이터를 저장하거나 읽어들이는 것이
가능하다.

단, 스트림은 컴퓨터에서 공통적으로 사용 되는 자원이기 때문에 스트림을 사용했으면 반드시 스트림을
컴퓨터에게 반환해줘야한다. (+ 즉, 스트림을 반환하지 않으면 불필요한 자원을 계속 유지하게 됨으로서 필요 할 때
스트림을 생성하지 못하는 문제를 일으킨다는 것을 알 수 있다.)

스트림은 단방향이기 때문에 프로그램과 파일 간에 데이터를 서로 주고 받기 위해서는 2 개의 스트림이 필요하다 (+ 즉,
프로그램에서 파일에 데이터를 내보내기 위한 스트림 1 개와 파일에서 프로그램으로 데이터를 읽어들이기 위한
스트림 1 개가 필요하다는 것을 알 수 있다.)

Python 스트림 생성 방법
- open 함수

위와 같이 Python 은 스트림을 생성하기 위한 open 함수를 지원하며 해당 함수를 활용하면 간단하게 스트림을
생성하는 것이 가능하다. (+ 즉, open 함수는 반환 데이터로 스트림을 반환한다는 것을 알 수 있다.)

Ex)
oWStream = open("SomeFile.txt", "wt")
oWStream.write("Hello, World!")

위와 같이 open 함수를 호출하면 특정 위치에 존재하는 파일과 데이터를 주고 받을 수 있는 스트림을 생성하는 것이
가능하다.

또한 open 함수는 파일이 존재하지 않을 경우 파일을 생성하는 역할도 수행한다. (+ 즉, 파일이 없으면 파일을 생성 후
스트림을 생성한다는 것을 알 수 있다.)

단, oepn 함수에 의해서 파일이 생성되는 경우는 스트림을 출력용으로 생성했을때만 가능하다. (+ 즉, 스트림을
입력용으로 생성 할 경우 파일은 생성되지 않는다는 것을 알 수 있다.)
"""

# Example 11 (파일 시스템)
def start(args):
	pass
	